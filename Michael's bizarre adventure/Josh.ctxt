#BlueJ class context
comment0.target=Josh
comment0.text=\r\n\ Josh\ is\ a\ subclass\ of\ Predator\ and\ is\ the\ top\ of\ the\ food\ chain\ \r\n\ hierarchy.\ They\ can\ eat\ Predators\ and\ Preys\ and\ never\ age\ or\ die,\ but\ they\ \r\n\ never\ reproduce.\ They\ continue\ moving\ through\ the\ night.\r\n\r\n\ @author\ Majed\ Alali\ and\ Vinushan\ Nagentherarajah\r\n\ @version\ 3.3\r\n
comment1.params=randomAge\ location
comment1.target=Josh(boolean,\ Location)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Josh.\r\n
comment2.params=currentField\ nextFieldState
comment2.target=void\ act(Field,\ Field)
comment2.text=\r\n\ This\ is\ what\ the\ predator\ does\ most\ of\ the\ time\:\ it\ hunts\ for\r\n\ preys.\ In\ the\ process,\ it\ might\ breed,\ die\ of\ hunger,\r\n\ or\ die\ of\ old\ age.\r\n\ @param\ currentField\ The\ field\ currently\ occupied.\r\n\ @param\ nextFieldState\ The\ updated\ field.\r\n
comment3.params=currentField\ nextFieldState
comment3.target=void\ nightAct(Field,\ Field)
comment3.text=\r\n\ Nothing\ changes\ for\ Josh\ during\ the\ night,\ his\ actions\ \r\n\ are\ exactly\ the\ same\ as\ during\ the\ day.\ Hunt,\ breed\ Michaels,\ \r\n\ maybe\ eat\ poop\ and/or\ get\ sick.\ or\ eat\ anyone\ in\ his\ way\ if\r\n\ the\ place\ is\ overcrowded.\r\n
comment4.params=field
comment4.target=Location\ findFood(Field)
comment4.text=\r\n\ Look\ for\ food\ adjacent\ to\ the\ current\ location,\ which\ are\ \r\n\ either\ Michael\ or\ Prey\ objects,\ since\ Josh\ eats\ any\ \r\n\ sort\ of\ meat.\ Only\ the\ first\ live\ Michael\ or\ prey\ is\ eaten.\r\n\ @param\ field\ The\ field\ currently\ occupied.\r\n\ @return\ Where\ food\ was\ found,\ or\ null\ if\ it\ wasn't.\r\n
comment5.params=nextFieldState\ freeLocations
comment5.target=void\ giveBirth(Field,\ java.util.List)
comment5.text=\r\n\ Check\ whether\ this\ Josh\ object\ is\ to\ give\ birth\ at\ this\ step.\r\n\ New\ births\ will\ be\ made\ into\ free\ adjacent\ locations.\ Josh\ \r\n\ can\ surprisingly\ only\ give\ birth\ to\ Michael...\r\n\ @param\ freeLocations\ The\ locations\ that\ are\ free\ in\ the\ current\ field.\r\n\ @param\ nextFieldState\ The\ next\ field\ state\ to\ be\ used.\r\n
comment6.params=closebyCharacters\ field
comment6.target=Michael\ closebyMichael(java.util.List,\ Field)
comment6.text=\r\n\ Checks\ for\ any\ closeby\ Michael\ Predators\ in\ the\ next\ field\ \r\n\ state\ and\ returns\ the\ first\ one\ found,\ or\ null\ if\ none\ are\ \r\n\ found.\r\n\ @return\ Michael\ if\ a\ Michael\ object\ was\ found\ in\ one\ of\ the\ \r\n\ adjacent\ spots,\ or\ none\ if\ no\ Michael\ object\ is\ adjacent\r\n\ to\ this\ Josh\ object.\r\n\ @param\ closebyCharacters\ The\ list\ of\ locations\ occupied\ \r\n\ by\ Characters\ adjacent\ to\ this\ Josh\ object.\r\n\ @param\ field\ The\ field\ to\ check.\r\n
comment7.params=occupiedSpots\ currentField\ nextFieldState
comment7.target=Location\ overtake(java.util.List,\ Field,\ Field)
comment7.text=\r\n\ With\ the\ almighty\ power,\ Josh\ overtakes\ a\ position\ of\ an\ adjacent\ \r\n\ character\ in\ case\ all\ other\ adjacent\ locations\ are\ occupied,\ \r\n\ ensuring\ his\ survival\ while\ also\ eating\ whatever\ character\ \r\n\ was\ in\ the\ overtaken\ spot.\ The\ last\ non-Josh\ character\ spotted\ \r\n\ will\ be\ overtaken.\r\n\ @param\ occupiedSpots\ The\ adjacent\ spots\ containing\ a\ character.\r\n\ @param\ currentField\ The\ current\ field\ object.\r\n\ @param\ nextFieldState\ The\ next\ field\ object\ to\ be\ used\ after\ this\ \r\n\ current\ field\ object.\r\n\ @return\ The\ new\ location\ to\ be\ placed\ in,\ or\ null\ if\ no\ \r\n\ overtaking\ happened.\r\n
numComments=8
